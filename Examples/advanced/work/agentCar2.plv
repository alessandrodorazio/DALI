 :-use_module(library(system)). :-dynamic info_vettura/2. :-dynamic stato_attraversamento/2. :-write('Sono una macchinina!'). asserisci_ontologia(Semaforo,[],attraversamento):-retractall(stato_attraversamento(_,_)),assertz(stato_attraversamento('concesso',Semaforo)). eve(init(Id,Priorita)):-assertz(info_vettura(Id,Priorita)). eve(arrivo_al_semaforo(Semaforo)):-assertz(stato_attraversamento('no')),format('Sono arrivato presso incrocio del semaforo ~w',Semaforo),nl,a(chiedo_di_attraversare(Semaforo)). a(chiedo_di_attraversare(Semaforo)):-info_vettura(Id,Priorita),write('Sto per chiedere al semaforo di attraversare'),nl,a(message(Semaforo,send_message(richiesta_attraversamento(Id,Priorita),Me))). attraverso:-write(''). evi(attraverso):-stato_attraversamento(Y,Semaforo),'concesso'==Y,retractall(stato_attraversamento(_,Semaforo)),assertz(stato_attraversamento('incorso',Semaforo)),a(message(agentSemaphore1,accept_proposal(test,[],Me))),write('Il semaforo mi ha appena concesso ad attraversare incrocio, dunque lo attraverso'),nl,a(termino_attraversamento). a(termino_attraversamento):-info_vettura(Id,_),stato_attraversamento(X,Semaforo),X=='incorso',retractall(stato_attraversamento(_,Semaforo)),assertz(stato_attraversamento('terminato',Semaforo)),write('Ho attraversato incrocio, dunque comunico al semaforo di aver terminato'),nl,a(message(Semaforo,send_message(termine_attraversamento(Id),Me))). :-dynamic receive/1. :-dynamic send/2. :-dynamic isa/3. receive(send_message(X,Ag)):-told(Ag,send_message(X)),call_send_message(X,Ag). receive(propose(A,C,Ag)):-told(Ag,propose(A,C)),call_propose(A,C,Ag). receive(cfp(A,C,Ag)):-told(Ag,cfp(A,C)),call_cfp(A,C,Ag). receive(accept_proposal(A,Mp,Ag)):-told(Ag,accept_proposal(A,Mp),T),call_accept_proposal(A,Mp,Ag,T). receive(reject_proposal(A,Mp,Ag)):-told(Ag,reject_proposal(A,Mp),T),call_reject_proposal(A,Mp,Ag,T). receive(failure(A,M,Ag)):-told(Ag,failure(A,M),T),call_failure(A,M,Ag,T). receive(cancel(A,Ag)):-told(Ag,cancel(A)),call_cancel(A,Ag). receive(execute_proc(X,Ag)):-told(Ag,execute_proc(X)),call_execute_proc(X,Ag). receive(query_ref(X,N,Ag)):-told(Ag,query_ref(X,N)),call_query_ref(X,N,Ag). receive(inform(X,M,Ag)):-told(Ag,inform(X,M),T),call_inform(X,Ag,M,T). receive(inform(X,Ag)):-told(Ag,inform(X),T),call_inform(X,Ag,T). receive(refuse(X,Ag)):-told(Ag,refuse(X),T),call_refuse(X,Ag,T). receive(agree(X,Ag)):-told(Ag,agree(X)),call_agree(X,Ag). receive(confirm(X,Ag)):-told(Ag,confirm(X),T),call_confirm(X,Ag,T). receive(disconfirm(X,Ag)):-told(Ag,disconfirm(X)),call_disconfirm(X,Ag). receive(reply(X,Ag)):-told(Ag,reply(X)). send(To,query_ref(X,N,Ag)):-tell(To,Ag,query_ref(X,N)),send_m(To,query_ref(X,N,Ag)). send(To,send_message(X,Ag)):-tell(To,Ag,send_message(X)),send_m(To,send_message(X,Ag)). send(To,reject_proposal(X,L,Ag)):-tell(To,Ag,reject_proposal(X,L)),send_m(To,reject_proposal(X,L,Ag)). send(To,accept_proposal(X,L,Ag)):-tell(To,Ag,accept_proposal(X,L)),send_m(To,accept_proposal(X,L,Ag)). send(To,confirm(X,Ag)):-tell(To,Ag,confirm(X)),send_m(To,confirm(X,Ag)). send(To,propose(X,C,Ag)):-tell(To,Ag,propose(X,C)),send_m(To,propose(X,C,Ag)). send(To,disconfirm(X,Ag)):-tell(To,Ag,disconfirm(X)),send_m(To,disconfirm(X,Ag)). send(To,inform(X,M,Ag)):-tell(To,Ag,inform(X,M)),send_m(To,inform(X,M,Ag)). send(To,inform(X,Ag)):-tell(To,Ag,inform(X)),send_m(To,inform(X,Ag)). send(To,refuse(X,Ag)):-tell(To,Ag,refuse(X)),send_m(To,refuse(X,Ag)). send(To,failure(X,M,Ag)):-tell(To,Ag,failure(X,M)),send_m(To,failure(X,M,Ag)). send(To,execute_proc(X,Ag)):-tell(To,Ag,execute_proc(X)),send_m(To,execute_proc(X,Ag)). send(To,agree(X,Ag)):-tell(To,Ag,agree(X)),send_m(To,agree(X,Ag)). call_send_message(X,Ag):-send_message(X,Ag). call_execute_proc(X,Ag):-execute_proc(X,Ag). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),meta_ref(X,N,L,Ag),a(message(Ag,inform(query_ref(X,N),values(L),A))). call_query_ref(X,_,Ag):-clause(agent(A),_),var(X),a(message(Ag,refuse(query_ref(variable),motivation(refused_variables),A))). call_query_ref(X,N,Ag):-clause(agent(A),_),not(var(X)),not(meta_ref(X,N,_,_)),a(message(Ag,inform(query_ref(X,N),motivation(no_values),A))). call_agree(X,Ag):-clause(agent(A),_),ground(X),meta_agree(X,Ag),a(message(Ag,inform(agree(X),values(yes),A))). call_confirm(X,Ag,T):-ground(X),statistics(walltime,[Tp,_]),asse_cosa(past_event(X,T)),retractall(past(X,Tp,Ag)),assert(past(X,Tp,Ag)). call_disconfirm(X,Ag):-ground(X),retractall(past(X,_,Ag)),retractall(past_event(X,_)). call_agree(X,Ag):-clause(agent(A),_),ground(X),not(meta_agree(X,_)),a(message(Ag,inform(agree(X),values(no),A))). call_agree(X,Ag):-clause(agent(A),_),not(ground(X)),a(message(Ag,refuse(agree(variable),motivation(refused_variables),A))). call_inform(X,Ag,M,T):-asse_cosa(past_event(inform(X,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,M,Ag),_,Ag)),assert(past(inform(X,M,Ag),Tp,Ag)). call_inform(X,Ag,T):-asse_cosa(past_event(inform(X,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(inform(X,Ag),_,Ag)),assert(past(inform(X,Ag),Tp,Ag)). call_refuse(X,Ag,T):-clause(agent(A),_),asse_cosa(past_event(X,T)),statistics(walltime,[Tp,_]),retractall(past(X,_,Ag)),assert(past(X,Tp,Ag)),a(message(Ag,reply(received(X),A))). call_cfp(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_353877,Ontology,_353881),_353871),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_cfp(A,C,Ag,_353915)),a(message(Ag,propose(A,[_353915],AgI))),retractall(ext_agent(Ag,_353953,Ontology,_353957)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_353751,Ontology,_353755),_353745),asserisci_ontologia(Ag,Ontology,A),once(call_meta_execute_propose(A,C,Ag)),a(message(Ag,accept_proposal(A,[],AgI))),retractall(ext_agent(Ag,_353821,Ontology,_353825)). call_propose(A,C,Ag):-clause(agent(AgI),_),clause(ext_agent(Ag,_353639,Ontology,_353643),_353633),not(call_meta_execute_propose(A,C,Ag)),a(message(Ag,reject_proposal(A,[],AgI))),retractall(ext_agent(Ag,_353695,Ontology,_353699)). call_accept_proposal(A,Mp,Ag,T):-asse_cosa(past_event(accepted_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(accepted_proposal(A,Mp,Ag),_,Ag)),assert(past(accepted_proposal(A,Mp,Ag),Tp,Ag)). call_reject_proposal(A,Mp,Ag,T):-asse_cosa(past_event(rejected_proposal(A,Mp,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(rejected_proposal(A,Mp,Ag),_,Ag)),assert(past(rejected_proposal(A,Mp,Ag),Tp,Ag)). call_failure(A,M,Ag,T):-asse_cosa(past_event(failed_action(A,M,Ag),T)),statistics(walltime,[Tp,_]),retractall(past(failed_action(A,M,Ag),_,Ag)),assert(past(failed_action(A,M,Ag),Tp,Ag)). call_cancel(A,Ag):-if(clause(high_action(A,Te,Ag),_353203),retractall(high_action(A,Te,Ag)),true),if(clause(normal_action(A,Te,Ag),_353237),retractall(normal_action(A,Te,Ag)),true). external_refused_action_propose(A,Ag):-clause(not_executable_action_propose(A,Ag),_). evi(external_refused_action_propose(A,Ag)):-clause(agent(Ai),_),a(message(Ag,failure(A,motivation(false_conditions),Ai))),retractall(not_executable_action_propose(A,Ag)). refused_message(AgM,Con):-clause(eliminated_message(AgM,_,_,Con,_),_). refused_message(To,M):-clause(eliminated_message(M,To,motivation(conditions_not_verified)),_353019). evi(refused_message(AgM,Con)):-clause(agent(Ai),_),a(message(AgM,inform(Con,motivation(refused_message),Ai))),retractall(eliminated_message(AgM,_,_,Con,_)),retractall(eliminated_message(Con,AgM,motivation(conditions_not_verified))). send_jasper_return_message(X,S,T,S0):-clause(agent(Ag),_352867),a(message(S,send_message(sent_rmi(X,T,S0),Ag))). gest_learn(H):-clause(past(learn(H),T,U),_352815),learn_if(H,T,U). evi(gest_learn(H)):-retractall(past(learn(H),_352691,_352693)),clause(agente(_352713,_352715,_352717,S),_352709),name(S,N),append(L,[46,112,108],N),name(F,L),manage_lg(H,F),a(learned(H)). cllearn:-clause(agente(_352485,_352487,_352489,S),_352481),name(S,N),append(L,[46,112,108],N),append(L,[46,116,120,116],To),name(FI,To),open(FI,read,_352585,[]),repeat,read(_352585,T),arg(1,T,H),write(H),nl,T==end_of_file,!,close(_352585). send_msg_learn(T,A,Ag):-a(message(Ag,confirm(learn(T),A))). told(From,send_message(M)):-true. told(Ag,execute_proc(_)):-true. told(Ag,query_ref(_,_)):-true. told(Ag,agree(_)):-true. told(Ag,confirm(_),200):-true. told(Ag,disconfirm(_)):-true. told(Ag,request(_,_)):-true. told(Ag,propose(_,_)):-true. told(Ag,accept_proposal(_,_),20):-true. told(Ag,reject_proposal(_,_),20):-true. told(_,failure(_,_),200):-true. told(_,cancel(_)):-true. told(Ag,inform(_,_),70):-true. told(Ag,inform(_),70):-true. told(Ag,reply(_)):-true. told(_,refuse(_,Xp)):-functor(Xp,Fp,_),Fp=agree. tell(To,From,send_message(M)):-true. tell(To,_,confirm(_)):-true. tell(To,_,disconfirm(_)):-true. tell(To,_,propose(_,_)):-true. tell(To,_,request(_,_)):-true. tell(To,_,execute_proc(_)):-true. tell(To,_,agree(_)):-true. tell(To,_,reject_proposal(_,_)):-true. tell(To,_,accept_proposal(_,_)):-true. tell(To,_,failure(_,_)):-true. tell(To,_,query_ref(_,_)):-true. tell(To,_,eve(_)):-true. tell(_,_,refuse(X,_)):-functor(X,F,_),(F=send_message;F=query_ref). tell(To,_,inform(_,M)):-true;M=motivation(refused_message). tell(To,_,inform(_)):-true,To\=user. tell(To,_,propose_desire(_,_)):-true. meta(P,V,AgM):-functor(P,F,N),N=0,clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,V,Pre,[Rep,Host]);same_as(F,V,Pre,[Rep,Host]);eq_class(F,V,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,V,PreM,[RepM,HostM]);same_as(F,V,PreM,[RepM,HostM]);eq_class(F,V,PreM,[RepM,HostM])),true,false),false)). meta(P,V,AgM):-functor(P,F,N),(N=1;N=2),clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,_):-functor(P,F,N),N=2,symmetric(F),P=..L,delete(L,F,R),reverse(R,R1),append([F],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),functor(P,F,N),N=2,(symmetric(F,AgM);symmetric(F)),P=..L,delete(L,F,R),reverse(R,R1),clause(ontology(Pre,[Rep,Host],Ag),_),if((eq_property(F,Y,Pre,[Rep,Host]);same_as(F,Y,Pre,[Rep,Host]);eq_class(F,Y,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,Y,PreM,[RepM,HostM]);same_as(F,Y,PreM,[RepM,HostM]);eq_class(F,Y,PreM,[RepM,HostM])),true,false),false)),append([Y],R1,R2),V=..R2. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N>2,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),P=..L,substitute(F,L,H,Lf),V=..Lf. meta(P,V,AgM):-clause(agent(Ag),_),clause(ontology(Pre,[Rep,Host],Ag),_),functor(P,F,N),N=2,P=..L,if((eq_property(F,H,Pre,[Rep,Host]);same_as(F,H,Pre,[Rep,Host]);eq_class(F,H,Pre,[Rep,Host])),true,if(clause(ontology(PreM,[RepM,HostM],AgM),_),if((eq_property(F,H,PreM,[RepM,HostM]);same_as(F,H,PreM,[RepM,HostM]);eq_class(F,H,PreM,[RepM,HostM])),true,false),false)),substitute(F,L,H,Lf),V=..Lf.
a(termino_attraversamento):-cd(termino_attraversamento),assert(do_action(termino_attraversamento,program)).
cd(termino_attraversamento):-true.
a(chiedo_di_attraversare(_907325)):-cd(chiedo_di_attraversare(_907325)),assert(do_action(chiedo_di_attraversare(_907325),program)).
cd(chiedo_di_attraversare(_907325)):-true.
a(learned(_907333)):-cd(learned(_907333)),assert(do_action(learned(_907333),program)).
cd(learned(_907333)):-true.
a(message(_907341,confirm(learn(_907353),_907349))):-cd(message(_907341,confirm(learn(_907353),_907349))),assert(do_action(message(_907341,confirm(learn(_907353),_907349)),program)).
cd(message(_907341,confirm(learn(_907353),_907349))):-true.
a(message(agentSemaphore1,accept_proposal(test,[],_907371))):-cd(message(agentSemaphore1,accept_proposal(test,[],_907371))),assert(do_action(message(agentSemaphore1,accept_proposal(test,[],_907371)),program)).
cd(message(agentSemaphore1,accept_proposal(test,[],_907371))):-true.
a(message(_907379,reply(received(_907391),_907387))):-cd(message(_907379,reply(received(_907391),_907387))),assert(do_action(message(_907379,reply(received(_907391),_907387)),program)).
cd(message(_907379,reply(received(_907391),_907387))):-true.
a(message(_907379,accept_proposal(_907387,[],_907409))):-cd(message(_907379,accept_proposal(_907387,[],_907409))),assert(do_action(message(_907379,accept_proposal(_907387,[],_907409)),program)).
cd(message(_907379,accept_proposal(_907387,[],_907409))):-true.
a(message(_907379,failure(_907387,motivation(false_conditions),_907427))):-cd(message(_907379,failure(_907387,motivation(false_conditions),_907427))),assert(do_action(message(_907379,failure(_907387,motivation(false_conditions),_907427)),program)).
cd(message(_907379,failure(_907387,motivation(false_conditions),_907427))):-true.
a(message(_907379,inform(agree(_907391),values(no),_907387))):-cd(message(_907379,inform(agree(_907391),values(no),_907387))),assert(do_action(message(_907379,inform(agree(_907391),values(no),_907387)),program)).
cd(message(_907379,inform(agree(_907391),values(no),_907387))):-true.
a(message(_907379,inform(agree(_907391),values(yes),_907387))):-cd(message(_907379,inform(agree(_907391),values(yes),_907387))),assert(do_action(message(_907379,inform(agree(_907391),values(yes),_907387)),program)).
cd(message(_907379,inform(agree(_907391),values(yes),_907387))):-true.
a(message(_907379,inform(query_ref(_907391,_907507),motivation(no_values),_907387))):-cd(message(_907379,inform(query_ref(_907391,_907507),motivation(no_values),_907387))),assert(do_action(message(_907379,inform(query_ref(_907391,_907507),motivation(no_values),_907387)),program)).
cd(message(_907379,inform(query_ref(_907391,_907507),motivation(no_values),_907387))):-true.
a(message(_907379,inform(query_ref(_907391,_907507),values(_907539),_907387))):-cd(message(_907379,inform(query_ref(_907391,_907507),values(_907539),_907387))),assert(do_action(message(_907379,inform(query_ref(_907391,_907507),values(_907539),_907387)),program)).
cd(message(_907379,inform(query_ref(_907391,_907507),values(_907539),_907387))):-true.
a(message(_907379,propose(_907387,[_907559],_907409))):-cd(message(_907379,propose(_907387,[_907559],_907409))),assert(do_action(message(_907379,propose(_907387,[_907559],_907409)),program)).
cd(message(_907379,propose(_907387,[_907559],_907409))):-true.
a(message(_907379,refuse(agree(variable),motivation(refused_variables),_907387))):-cd(message(_907379,refuse(agree(variable),motivation(refused_variables),_907387))),assert(do_action(message(_907379,refuse(agree(variable),motivation(refused_variables),_907387)),program)).
cd(message(_907379,refuse(agree(variable),motivation(refused_variables),_907387))):-true.
a(message(_907379,refuse(query_ref(variable),motivation(refused_variables),_907387))):-cd(message(_907379,refuse(query_ref(variable),motivation(refused_variables),_907387))),assert(do_action(message(_907379,refuse(query_ref(variable),motivation(refused_variables),_907387)),program)).
cd(message(_907379,refuse(query_ref(variable),motivation(refused_variables),_907387))):-true.
a(message(_907379,reject_proposal(_907387,[],_907409))):-cd(message(_907379,reject_proposal(_907387,[],_907409))),assert(do_action(message(_907379,reject_proposal(_907387,[],_907409)),program)).
cd(message(_907379,reject_proposal(_907387,[],_907409))):-true.
a(message(_907639,inform(_907645,motivation(refused_message),_907427))):-cd(message(_907639,inform(_907645,motivation(refused_message),_907427))),assert(do_action(message(_907639,inform(_907645,motivation(refused_message),_907427)),program)).
cd(message(_907639,inform(_907645,motivation(refused_message),_907427))):-true.
a(message(_907661,send_message(sent_rmi(_907391,_907675,_907677),_907379))):-cd(message(_907661,send_message(sent_rmi(_907391,_907675,_907677),_907379))),assert(do_action(message(_907661,send_message(sent_rmi(_907391,_907675,_907677),_907379)),program)).
cd(message(_907661,send_message(sent_rmi(_907391,_907675,_907677),_907379))):-true.
a(message(_907325,send_message(termine_attraversamento(_907697),_907371))):-cd(message(_907325,send_message(termine_attraversamento(_907697),_907371))),assert(do_action(message(_907325,send_message(termine_attraversamento(_907697),_907371)),program)).
cd(message(_907325,send_message(termine_attraversamento(_907697),_907371))):-true.
a(message(_907325,send_message(richiesta_attraversamento(_907697,_907719),_907371))):-cd(message(_907325,send_message(richiesta_attraversamento(_907697,_907719),_907371))),assert(do_action(message(_907325,send_message(richiesta_attraversamento(_907697,_907719),_907371)),program)).
cd(message(_907325,send_message(richiesta_attraversamento(_907697,_907719),_907371))):-true.
eve_cond(arrivo_al_semaforo(_931877)):-cd(arrivo_al_semaforo(_931877)),eve(arrivo_al_semaforo(_931877)).
cd(arrivo_al_semaforo(_931877)):-true.
eve_cond(init(_931885,_931887)):-cd(init(_931885,_931887)),eve(init(_931885,_931887)).
cd(init(_931885,_931887)):-true.